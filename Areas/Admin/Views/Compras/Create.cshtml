@model TiendaPc.Areas.Admin.Controllers.ComprasController.CreateOcVm
@using TiendaPc.Models
@{
    Layout = "/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Nueva Orden de Compra";

    var proveedores = ViewBag.Proveedores as IEnumerable<Proveedor> ?? Enumerable.Empty<Proveedor>();
    var almacenes   = ViewBag.Almacenes   as IEnumerable<Almacen>   ?? Enumerable.Empty<Almacen>();
    var productos   = ViewBag.Productos   as IEnumerable<Producto>  ?? Enumerable.Empty<Producto>();

    // siempre al menos una fila
    Model.Items ??= new();
    if (Model.Items.Count == 0) Model.Items.Add(new TiendaPc.Areas.Admin.Controllers.ComprasController.CreateOcItemVm());
}

<h3 class="mb-3">Nueva Orden de Compra</h3>

@if (!ViewData.ModelState.IsValid)
{
  <div class="alert alert-danger">
    @foreach (var e in ViewData.ModelState.Values.SelectMany(v => v.Errors)) { <div>@e.ErrorMessage</div> }
  </div>
}

<form asp-action="Create" method="post" id="formOc">
    @Html.AntiForgeryToken()

    <div class="row g-3 mb-3">
        <div class="col-md-5">
            <label class="form-label">Proveedor</label>
            <select asp-for="IdProveedor" class="form-select">
                <option value="">-- Seleccione --</option>
                @foreach (var p in proveedores)
                { <option value="@p.IdProveedor">@p.RazonSocial (@p.Ruc)</option> }
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label">Almac√©n</label>
            <select asp-for="IdAlmacen" class="form-select">
                <option value="">-- Seleccione --</option>
                @foreach (var a in almacenes)
                { <option value="@a.IdAlmacen">@a.Nombre</option> }
            </select>
        </div>
        <div class="col-md-2">
            <label class="form-label">Entrega</label>
            <input asp-for="FechaEntrega" type="date" class="form-control" />
        </div>
        <div class="col-md-1">
            <label class="form-label">Mon.</label>
            <input asp-for="Moneda" class="form-control" />
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center">
        <h5 class="mb-2">Items</h5>
        <button type="button" id="btnAdd" class="btn btn-sm btn-outline-dark">+ Agregar fila</button>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered align-middle" id="tablaItems">
            <thead>
                <tr>
                    <th style="width:55%">Producto</th>
                    <th style="width:15%">Cantidad</th>
                    <th style="width:20%">Precio unit.</th>
                    <th style="width:10%">Total</th>
                    <th style="width:5%"></th>
                </tr>
            </thead>
            <tbody>
@for (int i=0; i < Model.Items.Count; i++)
{
    var idSel = Model.Items[i].IdProducto;
    <tr>
        <td>
            <select name="Items[@i].IdProducto" class="form-select prod-select">
                <option value="">-- Seleccione --</option>
                @foreach (var p in productos)
                {
                    <option value="@p.IdProducto" @(p.IdProducto==idSel?"selected":"")>
                        @p.Nombre (@p.Sku)
                    </option>
                }
            </select>
        </td>
        <td><input name="Items[@i].Cantidad" class="form-control qty-input" type="number" min="1" value="@(Model.Items[i].Cantidad<=0?1:Model.Items[i].Cantidad)" /></td>
        <td><input name="Items[@i].PrecioUnitario" class="form-control price-input" type="number" min="0" step="0.01" value="@(Model.Items[i].PrecioUnitario<=0?0:Model.Items[i].PrecioUnitario)" /></td>
        <td class="text-end fw-semibold item-total">0.00</td>
        <td class="text-center"><button type="button" class="btn btn-sm btn-outline-danger btnDel">X</button></td>
    </tr>
}
            </tbody>
            <tfoot>
                <tr>
                    <th class="text-end" colspan="3">Subtotal:</th>
                    <th class="text-end" id="tSubtotal">0.00</th>
                    <th></th>
                </tr>
                <tr>
                    <th class="text-end" colspan="3">IGV (18%):</th>
                    <th class="text-end" id="tIgv">0.00</th>
                    <th></th>
                </tr>
                <tr>
                    <th class="text-end" colspan="3">Total:</th>
                    <th class="text-end h5" id="tTotal">0.00</th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="mt-2">
        <button class="btn btn-primary">Guardar OC</button>
        <a asp-action="Index" class="btn btn-outline-secondary ms-2">Cancelar</a>
    </div>
</form>

@section Scripts{
<script>
(function(){
  const tbody = document.querySelector('#tablaItems tbody');
  const btnAdd = document.getElementById('btnAdd');

  function optionsHtml(){
    const first = tbody.querySelector('select.prod-select');
    if (!first) return `<option value="">-- Seleccione --</option>`;
    return Array.from(first.options).map(o=>`<option value="${o.value}" ${o.selected?'selected':''}>${o.text}</option>`).join('');
  }

  function rowTotal(tr){
    const q = parseFloat(tr.querySelector('.qty-input').value || '0');
    const p = parseFloat(tr.querySelector('.price-input').value || '0');
    const tot = (q*p);
    tr.querySelector('.item-total').textContent = tot.toFixed(2);
    return tot;
  }
  function totals(){
    let sub=0;
    Array.from(tbody.querySelectorAll('tr')).forEach(tr => sub += rowTotal(tr));
    const igv = +(sub * 0.18).toFixed(2);
    const tot = (sub + igv).toFixed(2);
    document.getElementById('tSubtotal').textContent = sub.toFixed(2);
    document.getElementById('tIgv').textContent = igv.toFixed(2);
    document.getElementById('tTotal').textContent = tot;
  }

  function reindex(){
    Array.from(tbody.querySelectorAll('tr')).forEach((tr,i)=>{
      tr.querySelector('select.prod-select').name = `Items[${i}].IdProducto`;
      tr.querySelector('.qty-input').name = `Items[${i}].Cantidad`;
      tr.querySelector('.price-input').name = `Items[${i}].PrecioUnitario`;
    });
  }

  function addRow(){
    const i = tbody.querySelectorAll('tr').length;
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td><select name="Items[${i}].IdProducto" class="form-select prod-select">${optionsHtml()}</select></td>
      <td><input name="Items[${i}].Cantidad" class="form-control qty-input" type="number" min="1" value="1"></td>
      <td><input name="Items[${i}].PrecioUnitario" class="form-control price-input" type="number" min="0" step="0.01" value="0"></td>
      <td class="text-end fw-semibold item-total">0.00</td>
      <td class="text-center"><button type="button" class="btn btn-sm btn-outline-danger btnDel">X</button></td>`;
    tbody.appendChild(tr);
    totals();
  }

  btnAdd.addEventListener('click', addRow);

  tbody.addEventListener('input', e=>{
    if (e.target.classList.contains('qty-input') || e.target.classList.contains('price-input')){
      totals();
    }
  });
  tbody.addEventListener('click', e=>{
    if (e.target.classList.contains('btnDel')){
      e.target.closest('tr').remove();
      reindex();
      totals();
    }
  });

  totals(); // inicial
})();
</script>
}
